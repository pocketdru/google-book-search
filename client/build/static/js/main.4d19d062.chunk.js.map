{"version":3,"sources":["components/Nav/index.js","components/Jumbotron/index.js","components/utils/API.js","components/Grid/index.js","components/BookList/index.js","components/Input/index.js","components/Button/index.js","components/SaveBtn/index.js","components/ViewBtn/index.js","pages/Books.js","pages/Saved.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","Jumbotron","search","query","axios","get","params","q","saveBook","bookData","console","log","post","getBooks","deleteBook","id","delete","Container","fluid","children","Row","Col","size","split","map","join","BookList","BookListItem","title","author","about","thumbnail","role","src","alt","aria-label","Input","props","type","Button","onClick","SaveBtn","value","ViewBtn","Books","state","clear","books","bookSearch","handleInputChange","event","target","name","setState","handleFormSubmit","preventDefault","API","then","res","data","items","results","collections","book","info","volumeInfo","volume","authors","description","image","imageLinks","smallThumbnail","link","infoLink","push","catch","err","handleSaveButton","JSON","parse","getAttribute","indexOf","this","onChange","placeholder","key","stringify","Component","Saved","loadBooks","response","handleDeleteSubmit","bookId","_id","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d19d062.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Nav() {\n  return (\n    <nav className=\"nav\">\n     <a className=\"nav-link active\" href=\"/\">Google Books</a>\n     <a className=\"nav-link\" href=\"/saved\">Saved</a>\n    </nav>\n  );\n}\n\nexport default Nav;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid text-center\">\n      <h1 className=\"display-4\">(React) Google Books Search</h1>\n      <p className=\"lead\">\n        Search for and Save Books of Internet\n      </p>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import axios from \"axios\";\n\n// The getRecipes method retrieves recipes from the server\n// It accepts a \"query\" or term to search the recipe api for\nexport default {\n  search: function(query) {\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes?\", { params: { q: query } });\n  },\n\n  saveBook: function(bookData) {\n    console.log(bookData)\n    console.log(\"Book saved\");\n    return axios.post(\"/api/books/\", bookData);\n  },\n\n  getBooks: function(){\n    console.log('getting books')\n    return (axios.get('/api/books/')\n    );\n  },\n  deleteBook: function(id){\n    return axios.delete('/api/books/' + id)\n  }\n};  ","import React from \"react\";\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport { Container, Row, Col } from \"../Grid\";\n\n// Exporting both RecipeList and RecipeListItem from this file\n\n// BookList renders a bootstrap list item\nexport function BookList({ children }) {\n  return <ul className=\"list-group\">{children}</ul>;\n}\n\n// BookListItem renders a bootstrap list item containing data from the recipe api call\nexport function BookListItem({\n    id,\n    title,\n    author,  \n    about,\n    thumbnail\n\n}) {\n  return (\n    <li className=\"list-group-item\">\n      <Container>\n        <Row>\n        <Col size=\"xs-8 sm-9\" id={id}>\n              <h3 id={id}>{title}</h3>\n            <h5 id={id}>\n              <span className=\"p\">Authors: {author.join(', ')}.</span>\n            </h5>\n            <p id={id}>\n              <span className=\"p\">About:</span><span id=\"about\"> {about} </span>\n            </p>\n            \n          </Col>\n          <Col size=\"xs-4 sm-2\">\n          <div role=\"image\" id={id}>\n          <img src={thumbnail} alt={title}></img>\n          <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n          </div>\n          </div>\n          </Col>\n          {/* <SaveBtn/> */}\n        </Row>\n      </Container>\n    </li>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n// This component lets us use a bootstrap input element without worrying about class names\n// or manually wrapping the input with a form-group div\n// All of the props passed to this component are spread onto the input element\nfunction Input(props) {\n  return (\n    <div>\n      <h3>Books Search</h3>\n    <div className=\"input-group input-group-lg\">\n      <input className=\"form-control\" type=\"text\" {...props} />\n    </div>\n    </div>\n  );\n}\n\nexport default Input;\n","import React from \"react\";\n\n// Destructuring the type, className, children and onClick props, applying them to the button element\nfunction Button({ type = \"default\", className, children, onClick }) {\n  return (\n    <button onClick={onClick} className={[\"btn btn-lg\", `btn-${type}`, className].join(\" \")}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button;\n","import React from \"react\";\n\nfunction SaveBtn({ onClick, value }) {\n    return (\n      <button onClick={onClick} id=\"save\" className=\"btn btn-light\" value={value}>\n        Save \n      </button>\n    );\n  }\n  \n  export default SaveBtn;\n","import React from \"react\";\n\nfunction ViewBtn({ onClick }) {\n    return (\n      <button onClick={onClick} id=\"view\" className=\"btn btn-info\">\n        View\n      </button>\n    );\n  }\n  \n  export default ViewBtn;","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../components/utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { BookList, BookListItem } from \"../components/BookList\";\nimport Input from \"../components/Input\";\nimport Button from \"../components//Button\";\nimport SaveBtn from \"../components/SaveBtn\";\nimport \"./style.css\";\nimport ViewBtn from \"../components/ViewBtn\";\n\n\nclass Books extends Component {\n  state = {\n    clear: [],\n    books: [],\n    bookSearch: \"\"\n  };\n  \n handleInputChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    // When the form is submitted, prevent its default behavior, get books update the books state\n    event.preventDefault();\n    this.setState({ books: this.state.clear})\n\n    API.search(this.state.bookSearch)\n      .then(res => {\n        console.log(res.data.items);\n        const results = res.data.items;\n        const collections = [];\n        results.map(book => {\n          const info = book.volumeInfo;\n          const volume = {\n            title: info.title,\n            author: info.authors,\n            description: info.description ? info.description : \"Description is not provided\",\n            image: info.imageLinks.smallThumbnail ? info.imageLinks.smallThumbnail : \"http://books.google.com/books/content?id=VO8nDwAAQ…=frontcover&img=1&zoom=5&edge=curl&source=gbs_api\",\n            link: info.infoLink\n          };\n          collections.push(volume)\n        })\n        console.log(collections)\n        this.setState({ books: collections})\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleSaveButton = event => {\n    event.preventDefault();\n    var bookData = JSON.parse(event.target.getAttribute(\"value\"));\n    console.log(bookData);\n    console.log(this.state.books.indexOf(bookData))\n    API.saveBook(bookData)\n      .then(res => {\n        console.log(' Book saved!!')\n      })\n      .catch(err => console.log(err))\n    \n  };\n\n\n  \n  render() {\n    return (\n      <div>\n        <Jumbotron/>\n          <Container>\n            <Row>\n              <Col size=\"md-12\">\n                <form>\n                  <Container>\n                    <Row className=\"border\">\n                      <Col size=\"xs-9 sm-10\">\n                        <Input\n                          name=\"bookSearch\"\n                          value={this.state.bookSearch}\n                          onChange={this.handleInputChange}\n                          placeholder=\"Search For a Book\"\n                        />\n                      </Col>\n                      <Col size=\"xs-9 sm-10\">\n                        <Button\n                          onClick={this.handleFormSubmit}\n                          type=\"success\"\n                          className=\"input-lg\"\n                        >\n                          Search\n                        </Button>\n                    </Col>\n                  </Row>\n                </Container>\n              </form>\n            </Col>\n          </Row>\n          <Row>\n\n            <Col size=\"xs-12\">\n              {((this.state.books[0])?                 \n                  (\n               <BookList>\n                   {this.state.books.map(book => {\n                     return (\n                    <div key={book.description} className=\"f\">\n                       <BookListItem\n                       id= {book.id}\n                       title={book.title}\n                       author={book.author}\n                       href={book.link}\n                       about={book.description}\n                       thumbnail={book.image}\n                       value={book}     \n                        />\n                        <a className=\"btn btn-primary\" href={book.link} id=\"save\">View</a>\n                        <SaveBtn onClick={this.handleSaveButton} value={JSON.stringify(book)}/>\n                    </div>\n                     )\n                   })\n                }\n               </BookList> \n                  ) \n                  : \n                  (<h1 className=\"text-center display\">Nothing to display</h1>)\n              )}\n            </Col>\n          </Row>\n        </Container>\n        </div>\n      )\n  }\n}\n  export default Books;\n","import React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport API from \"../components/utils/API\";\nimport { BookList, BookListItem } from \"../components/BookList\";\nimport SaveBtn from \"../components/SaveBtn\";\n\n\nclass Saved extends Component {\n    state = {\n        books: [],\n        bookSearch: \"\"\n      };\n\n    componentDidMount() {\n        this.loadBooks();\n        console.log(this.state.books);\n\n      };\n\n      loadBooks = () => {\n        API.getBooks()\n          .then(response =>\n            this.setState({books:response.data}, function () {\n                console.log(this.state.books);\n            })\n          )\n          .catch(err => console.log(err));\n\n          console.log(this.state.books);\n      };\n\n      handleDeleteSubmit = event => {\n        event.preventDefault();\n\n        let bookId = event.target.getAttribute('value');\n        console.log(bookId);\n\n        API.deleteBook(bookId)\n        .then(res => this.loadBooks())\n        .catch(err => console.log(err))\n      };\n\nrender() {\n    return(\n      <div>\n        <Container>\n          <Row>\n            <Col size=\"xs-12\">\n            <h1 className=\"centered display\">Your Saved Books</h1>\n\n            {((this.state.books[0])? \n            (\n              <BookList>\n                   {this.state.books.map(book => {\n                     return (\n                    <div key={book._id} className=\"f\">\n                       <BookListItem\n                       id= {book.id}\n                       title={book.title}\n                       author={book.author}\n                       about={book.description}\n                       thumbnail={book.image}\n                       value={book}     \n                        />\n                        <a className=\"btn btn-primary\" href={book.link} id=\"save\">View</a>\n                        <button onClick={this.handleDeleteSubmit} id=\"save\" className=\"btn btn-light\" value={book._id}>Delete</button>\n\n                    </div>\n                     )\n                   })\n                }\n               </BookList>\n                ) : (<h3 className=\"display\">You didn't save any book.</h3>)\n            )}\n               </Col>\n               </Row>\n               </Container>\n        </div>\n    )\n}\n\n}\n\n\n\n\nexport default Saved;","import React from \"react\";\nimport Nav from \"./components/Nav\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Books from \"./pages/Books\";\nimport Saved from \"./pages/Saved\";\n\n function App() {\n    return (\n      <Router>\n      <div>\n        <Nav/>\n        <Switch>\n          <Route exact path=\"/\" component={Books} />\n          <Route exact path=\"/Saved\" component={Saved} />\n          {/* <Route exact path=\"/saved\" component={Jumbotron} /> */}\n        </Switch>\n        </div>\n      </Router>\n     );\n  }\n    export default App;\n\n \n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}