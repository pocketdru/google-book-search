{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\DU\\\\Homework\\\\google-book-search\\\\client\\\\src\\\\App.js\";\n\nimport React, { Component } from \"react\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Nav from \"./components/Nav\";\nimport Input from \"./components/Input\";\nimport Button from \"./components/Button\";\nimport API from \"./components/utils/API\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { BookList, BookListItem } from \"./components/BookList\";\nimport { Container, Row, Col } from \"./components/Grid\"; // class App extends Component {\n//   state = {\n//     books: [],\n//     bookSearch: \"\"\n//   };\n\nhandleInputChange = function handleInputChange(event) {\n  // Destructure the name and value properties off of event.target\n  // Update the appropriate state\n  var value = event.target.value;\n\n  _this.setState({\n    bookSearch: value\n  });\n};\n\nhandleFormSubmit = function handleFormSubmit(event) {\n  // When the form is submitted, prevent its default behavior, get books update the books state\n  event.preventDefault();\n  API.getBooks(_this.state.bookSearch).then(function (res) {\n    console.log(res.data.items);\n\n    _this.setState({\n      books: res.data\n    });\n\n    console.log(res.data.items[0].volumeInfo.description);\n    console.log(res.data.items[0].volumeInfo.imageLinks.smallThumbnail);\n\n    _this.setState({\n      books: res.data.items\n    });\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\n\nfunction App() {\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Jumbotron,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/saved\",\n    component: Jumbotron,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))));\n}\n\nexport default App;\n/* <Jumbotron />\n<Container>\n  <Row>\n    <Col size=\"md-12\">\n      <form>\n        <Container>\n          <Row className=\"border\">\n            <Col size=\"xs-9 sm-10\">\n              <Input\n                name=\"recipeSearch\"\n                value={this.state.bookSearch}\n                onChange={this.handleInputChange}\n                placeholder=\"Search For a Book\"\n              />\n            </Col>\n            <Col size=\"xs-9 sm-10\">\n              <Button\n                onClick={this.handleFormSubmit}\n                type=\"success\"\n                className=\"input-lg\"\n              >\n                Search\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n      </form>\n    </Col>\n  </Row>\n  <Row>\n    <Col size=\"xs-12\">\n       <h1 className=\"text-center\">Nothing to display</h1>\n       <BookList>\n           {this.state.books && this.state.books.length && this.state.books.map((book, index) => {\n             return (\n               <BookListItem\n               key={book.id}\n               title={book.volumeInfo.title}\n               authors={this.state.books[index].volumeInfo.authors[0]}\n               about={this.state.books[index].volumeInfo.description}\n               thumbnail={this.state.books[index].volumeInfo.imageLinks.smallThumbnail}\n               />\n             )\n           })\n        }\n       </BookList>\n    \n    </Col>\n  </Row>\n</Container> */","map":{"version":3,"sources":["D:\\DU\\Homework\\google-book-search\\client\\src\\App.js"],"names":["React","Component","Jumbotron","Nav","Input","Button","API","BrowserRouter","Router","Route","Switch","BookList","BookListItem","Container","Row","Col","handleInputChange","event","value","target","setState","bookSearch","handleFormSubmit","preventDefault","getBooks","state","then","res","console","log","data","items","books","volumeInfo","description","imageLinks","smallThumbnail","catch","err","App"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,uBAAvC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,mBAApC,C,CAEA;AACA;AACA;AACA;AACA;;AAEEC,iBAAiB,GAAG,2BAAAC,KAAK,EAAI;AAC3B;AACA;AAF2B,MAGnBC,KAHmB,GAGTD,KAAK,CAACE,MAHG,CAGnBD,KAHmB;;AAI3B,EAAA,KAAI,CAACE,QAAL,CAAc;AAAEC,IAAAA,UAAU,EAAEH;AAAd,GAAd;AACD,CALD;;AAOAI,gBAAgB,GAAG,0BAAAL,KAAK,EAAI;AAC1B;AACAA,EAAAA,KAAK,CAACM,cAAN;AACAjB,EAAAA,GAAG,CAACkB,QAAJ,CAAa,KAAI,CAACC,KAAL,CAAWJ,UAAxB,EACGK,IADH,CACQ,UAAAC,GAAG,EAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,KAArB;;AACA,IAAA,KAAI,CAACX,QAAL,CAAc;AAAEY,MAAAA,KAAK,EAAEL,GAAG,CAACG;AAAb,KAAd;;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBE,UAAlB,CAA6BC,WAAzC;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBE,UAAlB,CAA6BE,UAA7B,CAAwCC,cAApD;;AACA,IAAA,KAAI,CAAChB,QAAL,CAAe;AAAEY,MAAAA,KAAK,EAAEL,GAAG,CAACG,IAAJ,CAASC;AAAlB,KAAf;AACD,GAPH,EAQGM,KARH,CAQS,UAAAC,GAAG;AAAA,WAAIV,OAAO,CAACC,GAAR,CAAYS,GAAZ,CAAJ;AAAA,GARZ;AASD,CAZD;;AAcA,SAASC,GAAT,GAAe;AACb,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAErC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEA,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADA,CADF;AAUC;;AACD,eAAeqC,GAAf;AACI","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Nav from \"./components/Nav\";\nimport Input from \"./components/Input\";\nimport Button from \"./components/Button\";\nimport API from \"./components/utils/API\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { BookList, BookListItem } from \"./components/BookList\";\nimport { Container, Row, Col } from \"./components/Grid\";\n\n// class App extends Component {\n//   state = {\n//     books: [],\n//     bookSearch: \"\"\n//   };\n\n  handleInputChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { value } = event.target;\n    this.setState({ bookSearch: value });\n  };\n\n  handleFormSubmit = event => {\n    // When the form is submitted, prevent its default behavior, get books update the books state\n    event.preventDefault();\n    API.getBooks(this.state.bookSearch)\n      .then(res => {\n        console.log(res.data.items);\n        this.setState({ books: res.data });\n        console.log(res.data.items[0].volumeInfo.description);\n        console.log(res.data.items[0].volumeInfo.imageLinks.smallThumbnail)\n        this.setState( { books: res.data.items });\n      })\n      .catch(err => console.log(err));\n  };\n\n  function App() {\n    return (\n      <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Jumbotron} />\n          <Route exact path=\"/saved\" component={Jumbotron} />\n        </Switch>\n        </div>\n      </Router>\n     );\n    }\n    export default App;\n        /* <Jumbotron />\n        <Container>\n          <Row>\n            <Col size=\"md-12\">\n              <form>\n                <Container>\n                  <Row className=\"border\">\n                    <Col size=\"xs-9 sm-10\">\n                      <Input\n                        name=\"recipeSearch\"\n                        value={this.state.bookSearch}\n                        onChange={this.handleInputChange}\n                        placeholder=\"Search For a Book\"\n                      />\n                    </Col>\n                    <Col size=\"xs-9 sm-10\">\n                      <Button\n                        onClick={this.handleFormSubmit}\n                        type=\"success\"\n                        className=\"input-lg\"\n                      >\n                        Search\n                      </Button>\n                    </Col>\n                  </Row>\n                </Container>\n              </form>\n            </Col>\n          </Row>\n          <Row>\n            <Col size=\"xs-12\">\n               <h1 className=\"text-center\">Nothing to display</h1>\n               <BookList>\n                   {this.state.books && this.state.books.length && this.state.books.map((book, index) => {\n                     return (\n                       <BookListItem\n                       key={book.id}\n                       title={book.volumeInfo.title}\n                       authors={this.state.books[index].volumeInfo.authors[0]}\n                       about={this.state.books[index].volumeInfo.description}\n                       thumbnail={this.state.books[index].volumeInfo.imageLinks.smallThumbnail}\n                       />\n                     )\n                   })\n                }\n               </BookList>\n            \n            </Col>\n          </Row>\n        </Container> */\n \n\n\n"]},"metadata":{},"sourceType":"module"}